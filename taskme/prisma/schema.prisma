generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comentarios {
  id_comentario Int      @id @default(autoincrement())
  texto         String   @db.VarChar(500)
  id_usuario    Int
  id_tarefas    Int
  tarefas       tarefas  @relation(fields: [id_tarefas], references: [id_tarefas], onDelete: NoAction, onUpdate: NoAction, map: "fk_Comentarios_Tarefas1")
  usuarios      usuarios @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_Comentarios_Usuarios1")

  @@index([id_tarefas], map: "fk_Comentarios_Tarefas1_idx")
  @@index([id_usuario], map: "fk_Comentarios_Usuarios1_idx")
}

model convites {
  id_convite                                       Int      @id @default(autoincrement())
  data_convite                                     DateTime @db.Date
  status                                           Int      @default(1)
  data_resposta                                    DateTime @db.Date
  id_usuario_convidado                             Int
  id_usuario_iniciador                             Int
  id_projeto                                       Int
  projetos                                         projetos @relation(fields: [id_projeto], references: [id_projeto], onDelete: NoAction, onUpdate: NoAction, map: "fk_Convites_Projetos1")
  usuarios_convites_id_usuario_convidadoTousuarios usuarios @relation("convites_id_usuario_convidadoTousuarios", fields: [id_usuario_convidado], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_Convites_Usuarios1")
  usuarios_convites_id_usuario_iniciadorTousuarios usuarios @relation("convites_id_usuario_iniciadorTousuarios", fields: [id_usuario_iniciador], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_Convites_Usuarios2")

  @@index([id_projeto], map: "fk_Convites_Projetos1_idx")
  @@index([id_usuario_convidado], map: "fk_Convites_Usuarios1_idx")
  @@index([id_usuario_iniciador], map: "fk_Convites_Usuarios2_idx")
}

model projetos {
  id_projeto            Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(45)
  descricao             String?                 @db.VarChar(500)
  data_criacao          DateTime                @db.Date
  convites              convites[]
  tarefas               tarefas[]
  usuarios_has_projetos usuarios_has_projetos[]
}

model tarefas {
  id_tarefas   Int           @id @default(autoincrement())
  titulo       String        @db.VarChar(45)
  descricao    String        @db.VarChar(500)
  data_criacao DateTime      @db.Date
  prazo        DateTime?     @db.Date
  status       Int           @default(0)
  id_projeto   Int
  id_usuario   Int
  comentarios  comentarios[]
  projetos     projetos      @relation(fields: [id_projeto], references: [id_projeto], onDelete: NoAction, onUpdate: NoAction, map: "fk_Tarefas_Projetos1")
  usuarios     usuarios      @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_Tarefas_Usuarios1")

  @@index([id_projeto], map: "fk_Tarefas_Projetos1_idx")
  @@index([id_usuario], map: "fk_Tarefas_Usuarios1_idx")
}

model usuarios {
  id_usuario                                       Int                     @id @default(autoincrement())
  nome                                             String                  @db.VarChar(100)
  email                                            String                  @db.VarChar(100)
  senha                                            String                  @db.VarChar(64)
  comentarios                                      comentarios[]
  convites_convites_id_usuario_convidadoTousuarios convites[]              @relation("convites_id_usuario_convidadoTousuarios")
  convites_convites_id_usuario_iniciadorTousuarios convites[]              @relation("convites_id_usuario_iniciadorTousuarios")
  tarefas                                          tarefas[]
  usuarios_has_projetos                            usuarios_has_projetos[]
}

model usuarios_has_projetos {
  id_usuario Int
  id_projeto Int
  papel      String   @db.VarChar(45)
  projetos   projetos @relation(fields: [id_projeto], references: [id_projeto], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuarios_has_Projetos_Projetos1")
  usuarios   usuarios @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_Usuarios_has_Projetos_Usuarios")

  @@id([id_usuario, id_projeto])
  @@index([id_projeto], map: "fk_Usuarios_has_Projetos_Projetos1_idx")
  @@index([id_usuario], map: "fk_Usuarios_has_Projetos_Usuarios_idx")
}
